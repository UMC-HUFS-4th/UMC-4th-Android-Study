// Generated by view binder compiler. Do not edit!
package com.dyongchan.ch03_activity__fragment.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dyongchan.ch03_activity__fragment.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLying;

  @NonNull
  public final Button btnRemove;

  @NonNull
  public final Button btnWalking;

  @NonNull
  public final FrameLayout frame;

  private ActivityFragmentMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLying,
      @NonNull Button btnRemove, @NonNull Button btnWalking, @NonNull FrameLayout frame) {
    this.rootView = rootView;
    this.btnLying = btnLying;
    this.btnRemove = btnRemove;
    this.btnWalking = btnWalking;
    this.frame = frame;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_lying;
      Button btnLying = ViewBindings.findChildViewById(rootView, id);
      if (btnLying == null) {
        break missingId;
      }

      id = R.id.btn_remove;
      Button btnRemove = ViewBindings.findChildViewById(rootView, id);
      if (btnRemove == null) {
        break missingId;
      }

      id = R.id.btn_walking;
      Button btnWalking = ViewBindings.findChildViewById(rootView, id);
      if (btnWalking == null) {
        break missingId;
      }

      id = R.id.frame;
      FrameLayout frame = ViewBindings.findChildViewById(rootView, id);
      if (frame == null) {
        break missingId;
      }

      return new ActivityFragmentMainBinding((ConstraintLayout) rootView, btnLying, btnRemove,
          btnWalking, frame);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
